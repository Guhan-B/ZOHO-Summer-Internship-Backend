generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model team {
  id            Int        @id @unique(map: "id") @default(autoincrement())
  name          String     @db.VarChar(100)
  size          Int
  result        Int        @default(0)
  tournament_id Int
  leader_id     Int
  tournament    tournament @relation(fields: [tournament_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_team_tournament")
  user          user       @relation(fields: [leader_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_team_user")
  member        member[]

  @@index([tournament_id], map: "fk_team_tournament")
  @@index([leader_id], map: "fk_team_user")
}

model tournament {
  id            Int      @id @unique(map: "id") @default(autoincrement())
  name          String   @db.VarChar(100)
  sport         String   @db.VarChar(100)
  description   String   @db.VarChar(200)
  team_size     Int
  cancelled     Int      @default(0)
  event_date    String   @db.VarChar(100)
  deadline_date String   @db.VarChar(100)
  member        member[]
  team          team[]
}

model user {
  id            Int      @id @unique(map: "id") @default(autoincrement())
  name          String?  @db.VarChar(100)
  mobile_number String?  @db.VarChar(15)
  blood_group   String?  @db.VarChar(5)
  email         String   @unique(map: "email") @db.VarChar(100)
  password      String?  @db.VarChar(100)
  role          Int      @default(0)
  active        Int
  member        member[]
  team          team[]
  token         token[]
}

model member {
  id            Int        @id @unique(map: "id") @default(autoincrement())
  email         String     @db.VarChar(100)
  team_id       Int
  tournament_id Int
  team          team       @relation(fields: [team_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_member_team")
  tournament    tournament @relation(fields: [tournament_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_member_tournament")
  user          user       @relation(fields: [email], references: [email], onDelete: NoAction, onUpdate: NoAction, map: "fk_member_user")

  @@unique([tournament_id, email], map: "uc_member")
  @@index([team_id], map: "fk_member_team")
  @@index([email], map: "fk_member_user")
}

model token {
  id         String  @id @unique(map: "id") @db.VarChar(50)
  user_id    Int
  token      String  @db.VarChar(100)
  created_at String  @db.VarChar(100)
  os         String? @db.VarChar(25)
  browser    String? @db.VarChar(25)
  user       user    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_token_user")

  @@index([user_id], map: "fk_token_user")
}
